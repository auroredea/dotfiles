[user]
  name = auroredea
  email = aurore@deamaral.fr
[color]
  branch = true
  ui = true
  diff = true
  status = true
  log = true
[alias]
  a = add -p #p for verification before adding
  s = status
  st = status
  co = checkout
  rv = checkout --
  revert = checkout --
  ci = commit
  cia = commit -a #commit les fichiers indexés
  sa = stash #add stash
  sap = stash apply
  sal = stash list
  sad = stash drop
  ls = branch -vv
  lsa = branch -a -vv
  lg = log --all --name-status --graph --color --format='%C(yellow)%h%Creset %cr -%C(auto)%d%Creset %s %C(blue)[%cn]%Creset' #toutes les branches + modifications de fichiers
  l = log --graph --color --format='%C(yellow)%h%Creset %cr -%C(auto)%d%Creset %s %C(blue)[%cn]%Creset' #branche courante sans modification de fichier
  du = diff --diff-filter=U #diff des fichiers en conflits
  dc = "!f() { git diff $@^!; }; f"
  cp = cherry-pick -x #cherry-pick avec commentaire de commit auto
  cres = reset --soft HEAD^ #annuler le dernier commit
  sres = reset HEAD #retirer de l'index/stage (dé-add)
  find = "!git ls-files | grep -i --color"
  grep = grep --color -n
  caa = commit -a --amend -C HEAD #re-commit (efface avant) avec nouveaux fichiers
  ri = rebase -i #magic system sur ma branche (changer historique)
  pl = pull
  ps = push
  plo = pull origin
  pso = push origin
  plu = pull upstream
  psu = push upstream
  #résoudre les conflits (accepte une version ou une autre pour tous les fichiers listés)
  ours = "!f() { git co --ours $@ && git add $@; }; f" #ok branche courante
  theirs = "!f() { git co --theirs $@ && git add $@; }; f" #ok branche à checkout/merge
  la = "!git config -l | grep alias | cut -c 7-" #liste les alias
  alias = "!git config -l | grep alias | cut -c 7-" #liste les alias
  plro = pull --rebase origin
  plru = pull --rebase upstream
[help]
  autocorrect = 1
[push]
  default = matching
[core]
  autocrlf = input
  pager = diff-so-fancy | less --tabs=1,5 -R
  editor = vim -u NONE
